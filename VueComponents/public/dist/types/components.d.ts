/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import './stencil.core';




export namespace Components {

  interface AccordionComponent {
    'backgroundColor': string;
    'hoverBackgroundColor': string;
    'itemHead': string;
  }
  interface AccordionComponentAttributes extends StencilHTMLAttributes {
    'backgroundColor'?: string;
    'hoverBackgroundColor'?: string;
    'itemHead'?: string;
  }

  interface BtnExp {
    'colorButton': string;
    'content': string;
    'fontColor': string;
  }
  interface BtnExpAttributes extends StencilHTMLAttributes {
    'colorButton'?: string;
    'content'?: string;
    'fontColor'?: string;
  }

  interface CardComp {
    'cardBackButtonColor': string;
    'cardBackButtonColorFont': string;
    'cardBackColor': string;
    'cardFrontColor': string;
    'price': string;
    'spanColorInput': string;
    'title': string;
    'url': string;
  }
  interface CardCompAttributes extends StencilHTMLAttributes {
    'cardBackButtonColor'?: string;
    'cardBackButtonColorFont'?: string;
    'cardBackColor'?: string;
    'cardFrontColor'?: string;
    'price'?: string;
    'spanColorInput'?: string;
    'title'?: string;
    'url'?: string;
  }

  interface CheckBox {
    'numberColumn': number;
  }
  interface CheckBoxAttributes extends StencilHTMLAttributes {
    'numberColumn'?: number;
  }

  interface DropDown {
    'backgroundColor': string;
  }
  interface DropDownAttributes extends StencilHTMLAttributes {
    'backgroundColor'?: string;
  }

  interface DropLink {
    'backgroundColor': string;
  }
  interface DropLinkAttributes extends StencilHTMLAttributes {
    'backgroundColor'?: string;
  }

  interface FtBox {
    'cardColor': string;
    'title': string;
  }
  interface FtBoxAttributes extends StencilHTMLAttributes {
    'cardColor'?: string;
    'title'?: string;
  }

  interface GifComp {
    'url': string;
  }
  interface GifCompAttributes extends StencilHTMLAttributes {
    'url'?: string;
  }

  interface GridComp {
    'columnType': string;
  }
  interface GridCompAttributes extends StencilHTMLAttributes {
    'columnType'?: string;
  }

  interface ListGroupItem {
    'active': string;
    'backgroundColor': string;
    'checkBox': string;
  }
  interface ListGroupItemAttributes extends StencilHTMLAttributes {
    'active'?: string;
    'backgroundColor'?: string;
    'checkBox'?: string;
  }

  interface ListGroup {
    'numberColumn': number;
  }
  interface ListGroupAttributes extends StencilHTMLAttributes {
    'numberColumn'?: number;
  }

  interface ModalComp {}
  interface ModalCompAttributes extends StencilHTMLAttributes {}

  interface NavComp {
    'url': string;
  }
  interface NavCompAttributes extends StencilHTMLAttributes {
    'onNavSelected'?: (event: CustomEvent<string>) => void;
    'url'?: string;
  }

  interface SrComp {
    'navSelected': string;
    'searchSymbol': string;
  }
  interface SrCompAttributes extends StencilHTMLAttributes {
    'navSelected'?: string;
    'searchSymbol'?: string;
  }

  interface UcSpinner {}
  interface UcSpinnerAttributes extends StencilHTMLAttributes {}

  interface UcStockFinder {}
  interface UcStockFinderAttributes extends StencilHTMLAttributes {
    'onUcSymbolSelected'?: (event: CustomEvent<string>) => void;
  }

  interface UcStockPrice {
    'stockSymbol': string;
  }
  interface UcStockPriceAttributes extends StencilHTMLAttributes {
    'stockSymbol'?: string;
  }

  interface StoryComp {
    'captionStory': string;
    'colorStory': string;
    'fontColor': string;
    'titleStory': string;
    'url': string;
  }
  interface StoryCompAttributes extends StencilHTMLAttributes {
    'captionStory'?: string;
    'colorStory'?: string;
    'fontColor'?: string;
    'titleStory'?: string;
    'url'?: string;
  }

  interface BodyItem {}
  interface BodyItemAttributes extends StencilHTMLAttributes {}

  interface BodyTable {
    'numberColumn': number;
  }
  interface BodyTableAttributes extends StencilHTMLAttributes {
    'numberColumn'?: number;
  }

  interface HeadItem {}
  interface HeadItemAttributes extends StencilHTMLAttributes {}

  interface HeadTable {
    'numberColumn': number;
  }
  interface HeadTableAttributes extends StencilHTMLAttributes {
    'numberColumn'?: number;
  }

  interface TableComp {}
  interface TableCompAttributes extends StencilHTMLAttributes {}
}

declare global {
  interface StencilElementInterfaces {
    'AccordionComponent': Components.AccordionComponent;
    'BtnExp': Components.BtnExp;
    'CardComp': Components.CardComp;
    'CheckBox': Components.CheckBox;
    'DropDown': Components.DropDown;
    'DropLink': Components.DropLink;
    'FtBox': Components.FtBox;
    'GifComp': Components.GifComp;
    'GridComp': Components.GridComp;
    'ListGroupItem': Components.ListGroupItem;
    'ListGroup': Components.ListGroup;
    'ModalComp': Components.ModalComp;
    'NavComp': Components.NavComp;
    'SrComp': Components.SrComp;
    'UcSpinner': Components.UcSpinner;
    'UcStockFinder': Components.UcStockFinder;
    'UcStockPrice': Components.UcStockPrice;
    'StoryComp': Components.StoryComp;
    'BodyItem': Components.BodyItem;
    'BodyTable': Components.BodyTable;
    'HeadItem': Components.HeadItem;
    'HeadTable': Components.HeadTable;
    'TableComp': Components.TableComp;
  }

  interface StencilIntrinsicElements {
    'accordion-component': Components.AccordionComponentAttributes;
    'btn-exp': Components.BtnExpAttributes;
    'card-comp': Components.CardCompAttributes;
    'check-box': Components.CheckBoxAttributes;
    'drop-down': Components.DropDownAttributes;
    'drop-link': Components.DropLinkAttributes;
    'ft-box': Components.FtBoxAttributes;
    'gif-comp': Components.GifCompAttributes;
    'grid-comp': Components.GridCompAttributes;
    'list-group-item': Components.ListGroupItemAttributes;
    'list-group': Components.ListGroupAttributes;
    'modal-comp': Components.ModalCompAttributes;
    'nav-comp': Components.NavCompAttributes;
    'sr-comp': Components.SrCompAttributes;
    'uc-spinner': Components.UcSpinnerAttributes;
    'uc-stock-finder': Components.UcStockFinderAttributes;
    'uc-stock-price': Components.UcStockPriceAttributes;
    'story-comp': Components.StoryCompAttributes;
    'body-item': Components.BodyItemAttributes;
    'body-table': Components.BodyTableAttributes;
    'head-item': Components.HeadItemAttributes;
    'head-table': Components.HeadTableAttributes;
    'table-comp': Components.TableCompAttributes;
  }


  interface HTMLAccordionComponentElement extends Components.AccordionComponent, HTMLStencilElement {}
  var HTMLAccordionComponentElement: {
    prototype: HTMLAccordionComponentElement;
    new (): HTMLAccordionComponentElement;
  };

  interface HTMLBtnExpElement extends Components.BtnExp, HTMLStencilElement {}
  var HTMLBtnExpElement: {
    prototype: HTMLBtnExpElement;
    new (): HTMLBtnExpElement;
  };

  interface HTMLCardCompElement extends Components.CardComp, HTMLStencilElement {}
  var HTMLCardCompElement: {
    prototype: HTMLCardCompElement;
    new (): HTMLCardCompElement;
  };

  interface HTMLCheckBoxElement extends Components.CheckBox, HTMLStencilElement {}
  var HTMLCheckBoxElement: {
    prototype: HTMLCheckBoxElement;
    new (): HTMLCheckBoxElement;
  };

  interface HTMLDropDownElement extends Components.DropDown, HTMLStencilElement {}
  var HTMLDropDownElement: {
    prototype: HTMLDropDownElement;
    new (): HTMLDropDownElement;
  };

  interface HTMLDropLinkElement extends Components.DropLink, HTMLStencilElement {}
  var HTMLDropLinkElement: {
    prototype: HTMLDropLinkElement;
    new (): HTMLDropLinkElement;
  };

  interface HTMLFtBoxElement extends Components.FtBox, HTMLStencilElement {}
  var HTMLFtBoxElement: {
    prototype: HTMLFtBoxElement;
    new (): HTMLFtBoxElement;
  };

  interface HTMLGifCompElement extends Components.GifComp, HTMLStencilElement {}
  var HTMLGifCompElement: {
    prototype: HTMLGifCompElement;
    new (): HTMLGifCompElement;
  };

  interface HTMLGridCompElement extends Components.GridComp, HTMLStencilElement {}
  var HTMLGridCompElement: {
    prototype: HTMLGridCompElement;
    new (): HTMLGridCompElement;
  };

  interface HTMLListGroupItemElement extends Components.ListGroupItem, HTMLStencilElement {}
  var HTMLListGroupItemElement: {
    prototype: HTMLListGroupItemElement;
    new (): HTMLListGroupItemElement;
  };

  interface HTMLListGroupElement extends Components.ListGroup, HTMLStencilElement {}
  var HTMLListGroupElement: {
    prototype: HTMLListGroupElement;
    new (): HTMLListGroupElement;
  };

  interface HTMLModalCompElement extends Components.ModalComp, HTMLStencilElement {}
  var HTMLModalCompElement: {
    prototype: HTMLModalCompElement;
    new (): HTMLModalCompElement;
  };

  interface HTMLNavCompElement extends Components.NavComp, HTMLStencilElement {}
  var HTMLNavCompElement: {
    prototype: HTMLNavCompElement;
    new (): HTMLNavCompElement;
  };

  interface HTMLSrCompElement extends Components.SrComp, HTMLStencilElement {}
  var HTMLSrCompElement: {
    prototype: HTMLSrCompElement;
    new (): HTMLSrCompElement;
  };

  interface HTMLUcSpinnerElement extends Components.UcSpinner, HTMLStencilElement {}
  var HTMLUcSpinnerElement: {
    prototype: HTMLUcSpinnerElement;
    new (): HTMLUcSpinnerElement;
  };

  interface HTMLUcStockFinderElement extends Components.UcStockFinder, HTMLStencilElement {}
  var HTMLUcStockFinderElement: {
    prototype: HTMLUcStockFinderElement;
    new (): HTMLUcStockFinderElement;
  };

  interface HTMLUcStockPriceElement extends Components.UcStockPrice, HTMLStencilElement {}
  var HTMLUcStockPriceElement: {
    prototype: HTMLUcStockPriceElement;
    new (): HTMLUcStockPriceElement;
  };

  interface HTMLStoryCompElement extends Components.StoryComp, HTMLStencilElement {}
  var HTMLStoryCompElement: {
    prototype: HTMLStoryCompElement;
    new (): HTMLStoryCompElement;
  };

  interface HTMLBodyItemElement extends Components.BodyItem, HTMLStencilElement {}
  var HTMLBodyItemElement: {
    prototype: HTMLBodyItemElement;
    new (): HTMLBodyItemElement;
  };

  interface HTMLBodyTableElement extends Components.BodyTable, HTMLStencilElement {}
  var HTMLBodyTableElement: {
    prototype: HTMLBodyTableElement;
    new (): HTMLBodyTableElement;
  };

  interface HTMLHeadItemElement extends Components.HeadItem, HTMLStencilElement {}
  var HTMLHeadItemElement: {
    prototype: HTMLHeadItemElement;
    new (): HTMLHeadItemElement;
  };

  interface HTMLHeadTableElement extends Components.HeadTable, HTMLStencilElement {}
  var HTMLHeadTableElement: {
    prototype: HTMLHeadTableElement;
    new (): HTMLHeadTableElement;
  };

  interface HTMLTableCompElement extends Components.TableComp, HTMLStencilElement {}
  var HTMLTableCompElement: {
    prototype: HTMLTableCompElement;
    new (): HTMLTableCompElement;
  };

  interface HTMLElementTagNameMap {
    'accordion-component': HTMLAccordionComponentElement
    'btn-exp': HTMLBtnExpElement
    'card-comp': HTMLCardCompElement
    'check-box': HTMLCheckBoxElement
    'drop-down': HTMLDropDownElement
    'drop-link': HTMLDropLinkElement
    'ft-box': HTMLFtBoxElement
    'gif-comp': HTMLGifCompElement
    'grid-comp': HTMLGridCompElement
    'list-group-item': HTMLListGroupItemElement
    'list-group': HTMLListGroupElement
    'modal-comp': HTMLModalCompElement
    'nav-comp': HTMLNavCompElement
    'sr-comp': HTMLSrCompElement
    'uc-spinner': HTMLUcSpinnerElement
    'uc-stock-finder': HTMLUcStockFinderElement
    'uc-stock-price': HTMLUcStockPriceElement
    'story-comp': HTMLStoryCompElement
    'body-item': HTMLBodyItemElement
    'body-table': HTMLBodyTableElement
    'head-item': HTMLHeadItemElement
    'head-table': HTMLHeadTableElement
    'table-comp': HTMLTableCompElement
  }

  interface ElementTagNameMap {
    'accordion-component': HTMLAccordionComponentElement;
    'btn-exp': HTMLBtnExpElement;
    'card-comp': HTMLCardCompElement;
    'check-box': HTMLCheckBoxElement;
    'drop-down': HTMLDropDownElement;
    'drop-link': HTMLDropLinkElement;
    'ft-box': HTMLFtBoxElement;
    'gif-comp': HTMLGifCompElement;
    'grid-comp': HTMLGridCompElement;
    'list-group-item': HTMLListGroupItemElement;
    'list-group': HTMLListGroupElement;
    'modal-comp': HTMLModalCompElement;
    'nav-comp': HTMLNavCompElement;
    'sr-comp': HTMLSrCompElement;
    'uc-spinner': HTMLUcSpinnerElement;
    'uc-stock-finder': HTMLUcStockFinderElement;
    'uc-stock-price': HTMLUcStockPriceElement;
    'story-comp': HTMLStoryCompElement;
    'body-item': HTMLBodyItemElement;
    'body-table': HTMLBodyTableElement;
    'head-item': HTMLHeadItemElement;
    'head-table': HTMLHeadTableElement;
    'table-comp': HTMLTableCompElement;
  }


}
